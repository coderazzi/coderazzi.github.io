<!DOCTYPE html>
<html>
<head>
 <title>OsX on Asus P5N7A-VM (vanilla)</title>
 <link rel="stylesheet" type="text/css" href="../../css/global.css">
 <meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
 <meta name="Keywords" content="osx hackintosh p5n7a-vm vanilla snow leopard">

 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
 <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@300;400;900&display=swap" rel="stylesheet">
 <link rel="stylesheet" type="text/css" href="../../css/global.css">
 <link rel="stylesheet" type="text/css" href="../../css/site.css">
 <link rel="stylesheet" type="text/css" href="../../css/menu.css">
 <meta name="Author" content="Luis M. Pena">
 <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
 <div id="container">
  <div id="menu" class="wsmMenu"><div class="navcontainer"><ul class="navlist"><li class="group"><a href="../../index.htm">Blog</a></li><li class="group"><a href="../../codeartifact-maven/index.htm">Java</a></li><li class="group"><a href="../../python/djmovies/index.htm">python</a></li><li class="group"><a href="../../csharp/xmlobjects/index.htm">c#</a></li><li class="group"><a href="../../javascript/dominosa/dominosa.html">javascript</a></li><li class="group"><a href="../../cloud/aws/mfa/index.html">net + cloud</a></li><li class="group"><a href="../../linux/debian/troubleshooting.htm">Linux</a></li><li class="group"><a href="../../misc/obsidian/obsidian.html">Misc</a></li><li class="group"><a href="#" class="justtext">MacOS</a><ul class="navlist"><li><a href="../../howto/osx/keyboard/index.html">Keyboard mapping</a></li><li><a href="../../howto/osx/unsupported_printers/index.html">Unsupported printers</a></li><li><a href="../../howto/osx/nginx.html">Nginx</a></li><li><a href="../../howto/osx/pg_rails.html">PostgreSQL / Rails</a></li><li class="group"><a href="#" class="justtext">Hackintosh</a><ul class="navlist"><li><a href="../hackintoshing.htm">Hackintosh-ing</a></li><li class="group"><a href="../p5q-e/index.htm">Asus P5Q-E</a></li><li class="active"><a href="#">Asus P5N7A-VM</a></li><li class="group"><a href="../ga-b75m/index.html">Gigabyte GA-B75M</a></li><li><a href="../hibernation.htm">Sleep/hibernation</a></li></ul></li></ul></li><li class="group"><a href="../../phd/index.htm">PhD</a></li><li class="group"><a href="../../books/2017/index.htm">Just words</a></li></ul></div></div>
  <div id="body" class="wsmContent">
   <div id="header"><div>&nbsp;</div></div>
   <div id="content">
 

<p class="timestamp">23rd July 2009</p>
<p class="timestamp">05th July 2011</p>

<h1>OsX on Asus P5N7A-VM (vanilla)</h1>

<img src="osx-p5n7a-vm-lu.png" class="left">


<p>This post referred initially to the installation of Leopard (10.5.6); it is now updated to include <a href="#snow">Snow Leopard</a>.
In short: it works, currently updated to 10.6.8</p>

<h2>Leopard on the cage</h2>

<p>At insanelymac there is a 
<a href="http://www.insanelymac.com/forum/index.php?showtopic=148416&st=200&p=1080065&#entry1080065">discussion</a>
 on how to install Leopard on the P5N7A-VM using the boot-132 method.</p>
 
<p>I had built my PC without a CD-ROM (this is intended to be my server), and, as you could read on the
previous discussion, the USB ports are all but useless, so I was out of luck to install Leopard on the usual boot-132 terms.</p>

<p>However, I had two running Leopard machines, a Mac mini and a <a href="../p5q-e/index.htm">hackintosh</a>, so I decided to install Leopard on a separate hard disk, and set it up completely for the P5N7A-VM motherboard, where I would move later the disk. It worked beautifully, and the single feature not right is the shutdown/restart functionality. I can live without that. The USB works now perfectly (at 480 Mbs), and Os X updates are installed without a glitch.</p>

<p>The only problem I have found is rebooting into Os X after working in Ubuntu. In this case, the network driver does not work; the solution is to shutdown the Ubuntu server completely (power off the computer, not just software shudown) before starting Os X. Again, something I can handle.</p>

<p>This is my hardware:</p>
<ul>
	<li>Cpu: E5200.</li>
	<li>Motherboard: Asus P5N7A-VM (with Nvidia 9300 GPU)</li>
	<li>Memory: 4Gb (2 Corsair PC2-800).</li>
	<li>Hard disk: Hitachi 500 Gb</li>
	<li>A hotswap rack</li>
	<li>PSU: Be Quiet 300 W</li>	
	<li>Case: LianLi PCV-350B, with 2 120mm and 1 80 mm fan, regulated by the motherboard, plus another
	90 mm fan on mini Ninja Cpu cooler. I have also a Thermalright HR-05 cooler for the GPU, without fans.
	The case is almost silent, the PSU is the noisest component, and it is pretty silent.</li>
</ul>

<p>The installation required 9 steps. Obviously, most of these steps apply to any motherboard, as far as
the right drivers are available. I include first a detailed description of the steps I executed for the P5N7A-VM motherboard, and then a <a href="#summary">generic description</a> for any motherboard.</p>

<p><span class="mark">Attention: update via software update to 10.5.8 does not work: Ethernet is lost, but easily recovered,
and sound is gone, without solution so far. I will try next VoodooHDA, as I did with my 
<a href="../p5q-e/index.htm#1058">P5Q-E hackintosh</a>.</span></p>

<h2>Steps for P5N7A-VM</h2>

<ol>
 <li>The first step is to install Leopard on a free partition (20 Gb). I used retail 10.5.6. This installation can be done:
 <ul>
   <li>Using a Mac, directly, just specifying the free partition.</li>
   <li>Using the hackintosh, I had to install the retail DVD in yet another free partition (9 Gb), and then boot it using then boot-132 method. As usual, it ends with error.</li>
 </ul>
 The chosen free partition must be in a disk partitioned with MBR or with GUID. In the first case, the given partition must be one of the first 3 partitions, must be primary, and there must be not logical partitions before. 
 </li>
 <li>Now, it is needed to setup the installed partition. For that, reboot first on the working Mac / hackintosh</li>
 <li>Copy the <a href="DSDT.aml">DSDT.aml</a> for the associated CPU. 
 This file was provided by <span class="mark">Diabolik</span>, and is available 
   <a href="http://www.insanelymac.com/forum/index.php?showtopic=148416&st=200&p=1082035&#entry1082035">here</a>; have a look at this forum in case that newer versions are published. 
   In the same place is available the <a href="DSDT.dsl">DSDT.dsl</a> required for quad cores. Note that this file must be copied on the root directory in the installed partition.</li>
 <li>Install <a href="http://chameleon.osx86.hu/">Chameleon</a> on the installed partition, including the Extra files, although most of them are not needed.</li>
 <li>The previous step created an <span class="mark">Extra</span> folder in the root directory in the installed partition. It contains a file <a href="com.apple.Boot.plist">com.apple.Boot.plist</a> where I added a timeout of 1 second to boot into Os X, specifying:
 <pre>&lt;key&gt;Timeout&lt;/key&gt;&lt;string&gt;1&lt;/string&gt;</pre></li>
 <li>In the same directory, I included my own <a href="smbios.plist">smbios.plist</a>, although this is only needed to have nice values displayed on the <span class="mark">About this mac</span> dialog.</li>
 <li>Under this directory, enter the folder <span class="mark">Extensions</span>. It should only contain the following kexts:
 <ul>
    <li><span class="mark">AppleDecrypt.kext</span>: directly included by Chameleon</li>
    <li><span class="mark">IOAHCIBlockStorageInjector.kext</span>: directly included by Chameleon</li>
    <li><span class="mark">OpenHalRestart.kext</span>: directly included by Chameleon</li>
    <li><span class="mark">AppleHDA.kext</span>: provided in the
    <a href="http://www.insanelymac.com/forum/index.php?act=attach&type=post&id=45081">insanelymac</a> forum,
    by <span class="mark">frodokenny</span>, required for the audio to work. This driver comes with the next one:</li>
    <li><span class="mark">HDAEnabler.kext</span></li>
 </ul>
 I copied also the file <span class="mark">AppleHDA.kext</span> into the <span class="mark">/System/Library/Extensions</span> folder in the installed partition.
 </li>
 <li>Now, it is needed to set the correct access rights for each file. So, eject the installed partition, open a terminal window and mount again the partition (preserving rights) on the terminal doing something like:
 <pre>sudo mount -t hfs /dev/disk1s2 tmpdir</pre>
 where tmpdir is any temporal directory, and disk1s2 must be correctly specified (look at the Disk Utility program for the identity assigned to the installed partition).
 <pre> cd tmpdir
 sudo chown root:wheel DSDT.aml
 sudo chown -R root:wheel Extra</pre>
 </li>
 <li>Finally, rebuild the <span class="mark">Extensions.mkext</span> files found in 
 the <span class="mark">/Extra</span> and <span class="mark">/System/Library</span> folders. To do so,
 I have created the file <a href="updateMkext.sh">updateMkext.sh</a> in the <span class="mark">/Extra</span>
 folder, with the following code:
 <pre>KEXT_RETAIL="../System/Library/Extensions"
KEXT_EXTRA="../Extra/Extensions"
MKEXT="../Extra/Extensions.mkext"

kextcache -v 1 -t -l -a i386 -m "$MKEXT" "$KEXT_EXTRA" "$KEXT_RETAIL"</pre>
 This script was provided by the user <span class="mark">zhell</span> in 
 <a href="http://www.insanelymac.com/forum/lofiversion/index.php/t159063.html">insanelymac</a>.
 To execute it:
 <pre>cd /Extra
sudo ./updateMkExt.sh</pre>
</li></ol>

<p>Now, the hard disk with the newly Leopard installed can be swapped to the final machine, with the P5N7A-VM motherboard. Of course, to start it, it is needed a boot partition manager, and I used Grub, already installed in a separate hard disk.</p>

<p>That is all. I still copied the installed partition into the hard disk normally used in my machine, to avoid having two hard disks installed, but this step is obviously not required.</p>

<h2><a name="summary">Summary for any motherboard</a></h2>

<p>I am sure this summary works for any motherboard, if you are able to get the right drivers (kexts), which
is obviously the difficult part. In addition, it requires a working Mac or hackintosh:</p>

<ol>
<li>Install from a Mac/Hackintosh Leopard (I used 10.5.6) on a separate partition on the final hard disk.</li>
<li>Reboot into the working Mac/Hackintosh, mounting the final hard disk as well.</li>
<li>Unless the BIOS is patched (or is directly supported), copy DSDT.aml or DSDT.dsl to the root of the installed partition.</li>
<li>Install Chameleon on this partition.</li>
<li>Prepare convenienly the Extra folder. This is a trial and error loop, until all required kexts -and none more- are there. It must be also ensured that the access rights to all the files in this folder are correct (owner: root, group: wheel).</li>
<li>Swap the hard disk to the final machine, and ensure you can boot it (Grub is my best choice)</li>
</ol>


<h2><a name="snow">Installing Snow Leopard</a></h2>

<a href="#snowupdates">See below for Snow Leopards updates after initial installation</a>

<p>The update from Leopard to 10.6.0 followed the same steps: use a different machine (hackintosh) to perform the update, using a
separate hard disk, then include the required drivers, boot on the target P5N7A-VM hackintosh, and copy the created partition into the target disk. Finally, reinstall chameleon.</p>

<p>Something is to be considered here: the same boot loader cannot boot Leopard and Snow Leopard, so my solution is to keep both on separate hard drives, each with its own boot loader.</p>

<p>All files included below are zipped on the file <a href="SnowLeopardCustom.zip">SnowLeopardCustom.zip</a></p>

<ol>
 <li>Install Snow Leopard on a free partition (10 Gb) in a GUID-partitioned hard disk, and boot it, using the boot-132 method
 (using a USB stick, in my case). Then, clean install or update the current Leopard partition.</li>
 <li>Now, it is needed to setup the installed partition. For that, reboot first on the working Mac / hackintosh</li>
 <li>Install <a href="http://chameleon.osx86.hu/">Chameleon</a> on the installed partition, excluding the Extra files. In particular, whatever is the version you install, it is needed to install the boot fiel provided on Chameleon 2.0 Rc3 (r658
 package), and none of the earlier versions. In this moment, it is only possible to perform an easy install of Rc1, while Rc3 requires a custom installation: in this case, use the easy Rc1 installation, and then just override the boot file 
 on the root directory with the boot file included in Rc3 (included in the attached file),</li>
 <li>The previous step created an <span class="mark">Extra</span> folder in the root directory in the installed partition. It contains a file <a href="com.apple.Boot.plist">com.apple.Boot.plist</a> where I added a timeout of 1 second to boot into Os X, specifying:
 <pre>&lt;key&gt;Timeout&lt;/key&gt;&lt;string&gt;1&lt;/string&gt;</pre></li>
 <li>In the same directory, I included my own <a href="smbios.plist">smbios.plist</a>, although this is only needed to have nice values displayed on the <span class="mark">About this mac</span> dialog.</li>
 <li>Copy the <span class="mark">DSDT.aml</span> for the associated dual core CPU -the same as used in Leopard-. 
 Note that this file must be copied on the Extra directory in the installed partition, and look to the notes above if your
 CPU is not a dual core.</li>
 <li>Under this directory, enter the folder <span class="mark">Extensions</span>. It should only contain the following kexts:
 <ul>
    <li><span class="mark">fakesmc.kext</span></li>
    <li><span class="mark">IOAHCIBlockStorageInjector.kext</span>: avoids orange icons</li>
    <li><span class="mark">OpenHalRestart.kext</span></li>
 </ul></li>
 <li>Copy the file <span class="mark">AppleHDA.kext</span> into the <span class="mark">/System/Library/Extensions</span> folder in the installed partition. This controls the ALC1200 Realtek audio, provided <a href="http://www.insanelymac.com/forum/lofiversion/index.php/t161430.html">here</a>.</li>
 <li>Now, it is needed to set the correct access rights for each file. So, eject the installed partition, open a terminal window and mount again the partition (preserving rights) on the terminal doing something like:
 <pre>sudo mount -t hfs /dev/disk1s2 tmpdir</pre>
 where tmpdir is any temporal directory, and disk1s2 must be correctly specified (look at the Disk Utility program for the identity assigned to the installed partition).
 <pre> cd tmpdir
 sudo chown root:wheel DSDT.aml
 sudo chown -R root:wheel Extra</pre>
 </li>
</ol>

<h2><a name="usb">USB issues</a></h2>

<p>With the settings indicated above, and without additional changes, the system will be working, but with some issues. In special, rebooting and shutdown 
works only some times. Other times, the system takes ages to reboot or shutdown, if it even manages to do so. And starting the system becomes as well difficult, requiring normally starting it with &quot;-v&quot; option in chameleon. With this verbose flag set, the startup will show many errors related to the USB subsystem (some assertions also related to the sound), but the system can finally start. If you read through the forums, you can see that the root of the problem lies on the incomplete BIOS of the motherboard, which lacks an option to enable the EHCI handoff.</p>

<p>For me, these are just minor issues, as the reboot / shutdown / start process is quite unusual for me, as I rather put the system on sleep. This changed last week, when I bough a nice Apple keyboard, which refused to work under the existing conditions.</p>

<p>The best solution to solve all these issues is to disable the USB legacy option on the BIOS. This implies that the UBS keyboard becomes useless until the OS starts, which could have been an issue in the normal pre-conditions, where I was habitually forced to setup the verbose flag in Chameleon to start the system. But now, all the issues are gone, and the system properly boots / reboots / shuts down.</p>

<p>Still, I would need now to enable USB support on my boot loader (Grub, but the USB support is quite uncomplete), and I will be still unable to modify the startup settings in Chameleon. The PS/2 port comes now to the rescue, as I can always plug a PS/2 keyboard and setup any required Chameleon settings. I guess there is always a trade-off to pay.... </p>

<h2><a name="display">Display issues</a></h2>

<p>Although I have stated that the hardware works fine with Snow Leopard, there are many features that I could be missing. For example, I have no microphone connected to this hackintosh,
   so I cannot be sure if its audio drivers work as expected. Yesterday (10th January 2011), I was pointed to another problem: changing the screen resolution produces a blue screen; a cycle
   sleep/wake up will solve this problem.</p>

<p>I haven't had yet the time to investigate into the problem, but I believe it could be solved with the BIOS settings related to the card; otherwise, patching properly the DSDT, as explained
	on this <a href="http://tonymacx86.blogspot.com/2010/01/advanced-dsdt-fixes-nvidia-graphics.html">post</a>.</p>

<h2><a name="snowupdates">Snow Leopard updates</a></h2>

<h3>10.6.1 &amp; 10.6.2</h3>
<p>Updates to 10.6.1 and 10.6.2 run smoothly, using the default Software update. The only problem is that sound is lost, but the solution is easy.</p>

<p>The best is, before upgrading, to save a copy of the existing sound kext. This is the file <span class="mark">/System/Library/Extensions/AppleHDA.kext</span>. Otherwise, it is also available in the file <a href="SnowLeopardCustom.zip">SnowLeopardCustom.zip</a>, or in the original 
<a href="http://www.insanelymac.com/forum/lofiversion/index.php/t161430.html">web site</a>.</p>

<p>After upgrading, restore this kext into the original location <span class="mark">/System/Library/Extensions</span>. This is better accomplished using the tool <a href="http://cheetha.net/">Kext helper</a>.</p>

<h3>10.6.3 &amp; 10.6.4</h3>
<p>The update to 10.6.3 and 10.6.4 has the same problem, but, in addition, <span class="mark">USB stops working when the computer goes to sleep; it is needed to re-plug any USB device </span>. I have tried quite a few DSDT hacks, but nothing worked. I tried also using the <a href="http://www.bernhard-baehr.de/sleepwatcher_2.2.tgz">SleepWatcher daemon</a> to unload/load related kexts, but that is neither working. The only working solution is reinstalling a previous IOUSBFamily.kext (10.6.2 or 10.6.1). This is not a nice solution, but better holding back on a single kext, that holding on an old release (10.6.2) for just this one kext.</p>

<p>With this solution, it is still possible to use the keyboard to wake up the computer, but all plugged USB disks will be ejected without being properly unmounted. Please note that, in fact, this was already the situation on 10.6.2 (in that case, the same would happen, without the error message!)</p>

<h3>10.6.5</h3>
<p>Nice update, really smooth, it even corrects the USB problems that have appeared on the previous two releases. 
	It is only needed to restore the sound kext, as detailed above.</p>
<p>The restoring of the previous IOUSBFamily.kext is not anymore needed. Note that all plugged USB disks are still ejected without being properly unmounted, but the keyboard/mouse will continue working after a sleep/wake up cycle.</p>
<p>Sweet.</p>

<h3>10.6.6</h3>
<p>The best update ever, nothing stopped working!<p>

<h3>10.6.7</h3>
<p>Perfect update, nothing broken during the update.<p>

<h3>10.6.8</h3>
<p>Sound lost on the update, so the AppleHDA.kext must be reapplied, as it had happened regularly on every update up to 10.6.5.<p>

</div>
   <div id="copyright">Copyright (c) Luis M. Pena  -  lu@coderazzi.net</div> 
  </div>
 </div>
 <script type="text/javascript" src="../../js/coderazzi.js"></script>
</body>
</html>