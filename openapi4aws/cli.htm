<!DOCTYPE html>
<html>
<head>
    <title>Openapi 4 AWS - cli</title>
    <meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
    <link rel="stylesheet" type="text/css" href="../css/global.css">
    <meta name="Description" content="Openapi 4 AWS - command line interface">
    <meta name="Keywords" content="openapi aws cli interface">

 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
 <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@300;400;900&display=swap" rel="stylesheet">
 <link rel="stylesheet" type="text/css" href="../css/global.css">
 <link rel="stylesheet" type="text/css" href="../css/site.css">
 <link rel="stylesheet" type="text/css" href="../css/menu.css">
 <meta name="Author" content="Luis M. Pena">
 <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
 <div id="container">
  <div id="menu" class="wsmMenu"><div class="navcontainer"><ul class="navlist"><li class="group"><a href="../index.htm">Blog</a></li><li class="group"><a href="#" class="justtext">Java</a><ul class="navlist"><li><a href="../codeartifact-maven/index.htm">AWS+Maven</a></li><li class="group"><a href="#" class="justtext">OpenAPI4AWS</a><ul class="navlist"><li><a href="index.htm">Overview</a></li><li class="active"><a href="#">cli</a></li><li><a href="maven.htm">maven</a></li></ul></li><li class="group"><a href="../tablefilter/index.html">Table filter</a></li><li><a href="../idldepend/index.htm">IdlDepend</a></li><li class="group"><a href="../virtualnet/index.htm">VirtualNet</a></li><li><a href="../virtualnet2/index.htm">VirtualNet2</a></li><li><a href="../phd/index.htm">Sensei</a></li><li><a href="../cmdlinker/index.htm">CmdLinker</a></li><li><a href="../filesplit/index.htm">FileSplit</a></li><li><a href="../glassedpane/index.html">GlassedPane</a></li><li><a href="../menu/index.htm">Menu Applet</a></li><li><a href="../splitimage/index.htm">SplitImage</a></li></ul></li><li class="group"><a href="../python/djmovies/index.htm">python</a></li><li class="group"><a href="../csharp/xmlobjects/index.htm">c#</a></li><li class="group"><a href="../javascript/dominosa/dominosa.html">javascript</a></li><li class="group"><a href="../cloud/aws/mfa/index.html">net + cloud</a></li><li class="group"><a href="../linux/debian/troubleshooting.htm">Linux</a></li><li class="group"><a href="../misc/obsidian/obsidian.html">Misc</a></li><li class="group"><a href="../howto/osx/nginx.html">Os X</a></li><li class="group"><a href="../phd/index.htm">PhD</a></li><li class="group"><a href="../books/2017/index.htm">Just words</a></li></ul></div></div>
  <div id="body" class="wsmContent">
   <div id="header"><div>&nbsp;</div></div>
   <div id="content">

        <p class="timestamp">16th Dec 2021</p>
        <h1 id="openapi-4-aws">Openapi 4 AWS command line interface</h1>
        <img src="./openapi4aws.svg" class="right" width="180px" height="180px">
        <ul>
            <li>Github: <a href="https://github.com/coderazzi/openapi4aws">https://github.com/coderazzi/openapi4aws</a></li>
            <li>Maven central: <a href="https://mvnrepository.com/artifact/net.coderazzi/openapi4aws">https://mvnrepository.com/artifact/net.coderazzi/openapi4aws</a></li>
            <li>License: MIT license</li>
        </ul>
        <p>This is utility to enrich an openapi specification with information specific for the AWS API Gateway.
            It allows defining route integrations and authorizers to do automatic (re-)imports in API Gateway.</p>

        <p>There is a <a href="maven.htm">maven plugin</a> covering this functionality, as well as a standalone
        <a href="/python/optmatch">python</a> version</p>

        <h2 id="security-authorizers">Security / Authorizers</h2>
        <p>To specify an authorizer, use the following mandatory parameters:</p>
        <ul>
            <li><b>authorizer.name</b>: name of the authorizer</li>
            <li><b>authorizer.identity-source</b>: header containing the authorization, like: $request.header.Authorization</li>
            <li><b>authorizer.audience</b>: comma separated list of audiences for this authorizer.</li>
            <li><b>authorizer.issuer</b></li>
        </ul>
        <p>The following two parameters are currently optional:</p>
        <ul>
            <li><em>authorizer.authorization-type=<b>oauth2</b></em>: currently, it can be only defined as &quot;oauth2&quot;.</li>
            <li><em>authorizer.type=<b>jwt</b></em>: currently, it can be only defined as &quot;jwt&quot;.
            </li>
        </ul>
        <p>Multiple authorizers can be defined using a comma separated list in <b>authorizer.name</b>, i.e.:</p>
        <pre>authorizer.name=authorizer1, authorizer2</pre>

        <p>It is possible then to specify a different parameter for each authorizer using the syntax:</p>
        <ul>
            <li><b>authorizer.audience.<em>AUTHORIZER_NAME</em></b>=audience</li>
            <li><b>authorizer.issuer.<em>AUTHORIZER_NAME</em></b>=issuer</li>
        </ul>

        <h2 id="paths-integrations">Paths / Integrations</h2>
        <p>To define routes, the syntax is:</p>
        <ul>
            <li><b>path.<em>PATH</em></b>=full_uri[,authorizer_name,scopes]*</li>
        </ul>
        <p>For example:</p>
        <pre>path.user.post=http://3.64.241.104:12121/user/post</pre>

        <p>This will define an endpoint for the route /user/post, using no authorizers.
            Alternatively, authorizer plus scopes can be specified:</p>
        <pre>path.user.post=http://3.64.241.104:12121user/post,authorizer1,user.email,user.id</pre>

        <p>In this case, it uses the authorizer with name &quot;authorizer1&quot;, with scopes &quot;user.email&quot;
            and &quot;user.id&quot;</p>
        <h2 id="paths-integrations-using-tags">Paths / Integrations Using tags</h2>
        <p>A better option to define integrations is defining openapi tags associated for that path,
            and using then the following parameters:</p>
        <ul>
            <li><b>tag.<em>TAG</em></b>=uri[,authorizer_name,scopes]*</li>
        </ul>
        <p>For example, if a route <em>/user/post</em> has an associated tag <em>Frontend</em>, and we define:</p>
        <pre>tag.Frontend=http://3.64.241.105:12121</pre>

        <p>This path will be extended to use the endpoint: <code>http://3.64.241.105:12121/user/post</code></p>

        <h2 id="defining-input-output">Defining input / output</h2>

        <p>Three parameters manage the input / output tasks:</p>
        <ul>
            <li><b>filename</b>: allows to specify the input files to process, and it is possible to repeat this
                parameter multiple times. It is an error if the designed filename does not exist.</li>
            <li><b>glob</b>: which supports specifying the input using filename patterns.
                It is not an error if this pattern matches no names in the file system.</li>
            <li><b>output-folder</b>: optional, defines the output folder.
                If not specified, the input files will be overwritten.</li>
        </ul>

        <h2 id="defining-separate-file">Defining the configuration in a separate file</h2>

        <p>It is possible to specify any configuration parameters in a separate file, using the argument:</p>

        <pre>configuration=filename</pre>

        <p>This file should define the parameters in separate lines, using the same syntax.
            Empty lines and starting with the character **#** are discarded.</p>

        <p>It is possible to specify multiple external configuration files.</p>

        <p>An example of such a file would be just:</p>

        <pre># a simple comment
authorizer.name=DubaixCognito,Other
authorizer.identity-source=$request.header.Authorization
authorizer.audience=2f0m9fcoiejij4316u574aq259,7ac34sujrb8gmvj2b6blpi7ruu
authorizer.issuer=https://cognito-idp.eu-west-2.amazonaws.com/eu-west-2_1T9bfKHNp

tag.Frontend=http://3.64.241.104:12121/tmp/,DubaixCognito,user.email,user.id
path.user.scope2=http://OTHER_PATH:12122/path,Other,user.email</pre>

        <h2 id="usage">Usage</h2>

        <p>To use the utility from the command line, build it or download from maven central.
            The version with built-in dependencies is available as (link depends on version used):
            <a href="https://repo1.maven.org/maven2/net/coderazzi/openapi4aws/1.1.1/openapi4aws-1.1.1-jar-with-dependencies.jar">
                https://repo1.maven.org/maven2/net/coderazzi/openapi4aws/1.1.1/openapi4aws-1.1.1-jar-with-dependencies.jar
            </a>
        </p>

        <pre>java -jar openapi4aws-1.0.2-jar-with-dependencies.jar --configuration=conf.prop</pre>
    </div>
   <div id="copyright">Copyright (c) Luis M. Pena  -  lu@coderazzi.net</div> 
  </div>
 </div>
 <script type="text/javascript" src="../js/coderazzi.js"></script>
</body>
</html>